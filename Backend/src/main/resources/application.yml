spring:
  profiles:
    include: app, connection

#spring:
#  servlet:
#    multipart:
#      # default 0
#      file-size-threshold: 0MB
#      #      location을 설정하지 않으면 System.getProperty("java.io.tmpdir"); 경로에 저장
#      location: C:/Users/SSAFY/Desktop/springFile
#      #      default 1MB
#      max-file-size: 100MB
#      #      default 10MB
#      max-request-size: 100MB
#
#---
#
#server:
#  servlet:
#    context-path: /app
#    port: 8080
#
#logging:
#  config: classpath:log4j2.xml
#
#spring:
#
#  security:
#    oauth2:
#      client:
#        registration:
#
#          google:
#            client-name: google
#            client-id: 210492167110-lfiuso34ko9chdv1qvkh39hefeh8gugv.apps.googleusercontent.com
#            client-secret: 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
#            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
#            authorization-grant-type: authorization_code
#            scope:
#              - email
#              - profile
#          naver:
#            client-name: naver
#            client-id: oIcX6isYx1rMy8rixb74
#            client-secret: zFpNuVO8og
#            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
#            authorization-grant-type: authorization_code
#            scope:
#              - email
#              - name
#              - profile_image
#          kakao:
#            client-name: kakao
#            client-id: cf2b28e65350426d2a63e8c5ff602bf1
#            client-secret: TYOC8nfxKUwIQC9aW8nTv61V8Cs5Ushx
#            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
#            authorization-grant-type: authorization_code
#            scope:
#              - account_email
#              - profile_nickname
#              - profile_image
#            client-authentication-method: POST
#        provider:
#          google:
#            user-name-attribute: sub
#          kakao:
#            authorization-uri: https://kauth.kakao.com/oauth/authorize
#            user-info-uri: https://kapi.kakao.com/v2/user/me
#            token-uri: https://kauth.kakao.com/oauth/token
#            user-name-attribute: id
#          naver:
#            authorization-uri: https://nid.naver.com/oauth2.0/authorize
#            user-info-uri: https://openapi.naver.com/v1/nid/me
#            token-uri: https://nid.naver.com/oauth2.0/token
#            user-name-attribute: response
#
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost/PERSONA?allowPublicKeyRetrieval=true&useSSL=false&useUniCode=yes&characterEncoding=utf8&serverTimezone=Asia/Seoul
#    username: STEPUP
#    password: "!stepup@persona#301"
#
#  mvc:
#    pathmatch:
#      matching-strategy: ant_path_matcher
#
#  jpa:
#    database: mysql
#    hibernate:
#      ddl-auto: update
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true
#
#  redis:
#    host: localhost
#    port: 6379
##    password: ssafy3542
#
## redisconfig에서 참조하는 속성 => 오류 방지
#redis:
#  host: localhost
#  port: 6379
#  pwd:
#
#cors:
#  allowedOrigins: http://localhost:3000
#
#app:
#  oauth2:
#    authorized-redirect-uris:
#      - http://localhost:8080/oauth2/token
#
#  auth:
#    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
#    tokenExpirationMsec: 2592000000
#
#cloud:
#  aws:
#    stack:
#      auto: false
#    credentials:
#      access-key: AKIAXOKFGBIDWBDEY6IA
#      secret-key: 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
#    s3:
#      bucket: persona-test-bucket
#    region:
#      static: ap-northeast-2
